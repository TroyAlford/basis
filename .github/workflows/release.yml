name: Release

on:
  push:
    branches: [ 'main' ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.head_ref || github.ref_name }}
      - uses: ./.github/actions/asdf-setup

      - name: Create Release
        id: create_release
        uses: ./.github/actions/create-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if Version Created
        id: release_created
        run: |
          if [[ -n "${{ steps.create_release.outputs.released }}" ]]; then
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "version=${{ steps.create_release.outputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "No new version created. Skipping publication."
            echo "should_publish=false" >> $GITHUB_OUTPUT
          fi

      - name: Check NPM Token
        if: steps.release_created.outputs.should_publish == 'true'
        id: npm_token
        run: |
          if [[ -n "${{ secrets.NPM_TOKEN }}" ]]; then
            echo "token_exists=true" >> $GITHUB_OUTPUT
          else
            echo "⚠️ NPM_TOKEN secret is not set. Skipping npm publication."
            echo "token_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure NPM
        if: steps.release_created.outputs.should_publish == 'true' && steps.npm_token.outputs.token_exists == 'true'
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          
      - name: Identify Changed Packages
        if: steps.release_created.outputs.should_publish == 'true' && steps.npm_token.outputs.token_exists == 'true'
        id: changes
        run: |
          changed=$(bun workspace changed --only '^@basis/')
          echo "Changed packages: $changed"
          echo "packages=$changed" >> $GITHUB_OUTPUT

      - name: Build and Publish Changed Packages
        if: steps.release_created.outputs.should_publish == 'true' && steps.npm_token.outputs.token_exists == 'true'
        run: |
          packages='${{ steps.changes.outputs.packages }}'
          version='${{ steps.release_created.outputs.version }}'
          skipped_packages=()
          
          for package in $(echo "$packages" | jq -r '.[]'); do
            echo "Building $package@$version"
            result=$(bun workspace build "$package" -v "$version" 2>&1)
            if [[ $result == *"SKIP"* ]]; then
              echo "⏭️ Skipping $package (build disabled)"
              skipped_packages+=("$package")
              continue
            elif [ $? -eq 0 ]; then
              echo "✅ Successfully built $package"
              
              if npm view "$package@$version" version 2>/dev/null; then
                echo "⚠️ Version $version of $package already exists on npm. Skipping."
                continue
              fi
              
              echo "Publishing $package@$version"
              cd "$(bun workspace find "$package")"
              npm publish --access public
              cd -
            else
              echo "::error::Failed to build $package"
              exit 1
            fi
          done
