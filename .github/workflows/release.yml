name: Release

on:
  push:
    branches: [ 'main' ]
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  packages: write
  pull-requests: write

jobs:
  determine-version:
    runs-on: ubuntu-latest
    outputs:
      release-needed: ${{ steps.version.outputs.release-needed }}
      next-version: ${{ steps.version.outputs.next-version }}
      current-version: ${{ steps.version.outputs.current-version }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: ./.github/actions/asdf-setup
      - name: Determine Version
        id: version
        uses: ./.github/actions/determine-version

  create-release:
    needs: determine-version
    if: needs.determine-version.outputs.release-needed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: ./.github/actions/asdf-setup
      - uses: ./.github/actions/create-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ needs.determine-version.outputs.next-version }}

  publish:
    needs: determine-version
    if: needs.determine-version.outputs.release-needed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: ./.github/actions/asdf-setup

      - name: Identify Changed Workspaces
        id: changes
        run: |
          workspaces=$(bun workspace changed)
          echo "Changed workspaces: $workspaces"
          version='${{ needs.determine-version.outputs.next-version }}'
          
          # Prepare the --only flags for each workspace
          only_flags=$(echo "$workspaces" | jq -r '.[]' | sed 's/^/--only /')
          
          echo "Publishing workspaces to JSR"
          bun ws publish --version "$version" $only_flags || {
            echo "::error::Failed to publish workspaces to JSR"
            exit 1
          }
