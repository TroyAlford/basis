name: CI

on:
  pull_request:
    types: [opened, edited, synchronize]
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-pr-title:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/enforce-convco
        id: enforce-convco
      - name: Post PR comment
        uses: actions/github-script@v5
        id: comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}  # Ensure the token is passed
          script: |
            const title = context.payload.pull_request.title;
            const isValid = '${{ steps.enforce-convco.outputs.valid }}'; // Assuming your action outputs a valid flag
            const commentBody = isValid === 'true' 
              ? '✅ The PR title is valid.' 
              : '❌ The PR title does not meet the required format.';
            
            const comments = await github.issues.listComments({
              ...context.repo,
              issue_number: context.payload.pull_request.number,
            });

            const existingComment = comments.data.find(comment => comment.body.includes('PR title check'));

            if (existingComment) {
              await github.issues.updateComment({
                ...context.repo,
                comment_id: existingComment.id,
                body: commentBody,
              });
            } else {
              await github.issues.createComment({
                ...context.repo,
                issue_number: context.payload.pull_request.number,
                body: commentBody,
              });
            }

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/asdf-setup
      - run: bun test

  required:
    if: always()
    needs: [check-pr-title, run-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Check if required jobs passed or were skipped
        run: |
          if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
            echo "One or more required jobs failed"
            exit 1
          else
            echo "All required jobs have passed or were skipped!"
          fi
